- name: Set the DigitalOcean Access Token fact
  set_fact:
    do_token: "{{ do_access_token }}"
    public_key: "{{ lookup('file', '{{ SSH_keys.public }}') }}"

- name: Get existing SSH keys
  uri:
    url: https://api.digitalocean.com/v2/account/keys
    method: GET
    HEADER_Content-Type: 'application/json'
    HEADER_Authorization: "Bearer {{ do_access_token }}"
    status_code: 200
    body_format: json
  register: do_existing_keys

- set_fact:
    ssh_key_exist: true
  when: public_key == item.public_key
  with_items:
    - "{{ do_existing_keys.json.ssh_keys }}"

- name: Upload the SSH key
  uri:
    url: https://api.digitalocean.com/v2/account/keys
    method: POST
    HEADER_Content-Type: 'application/json'
    HEADER_Authorization: "Bearer {{ do_access_token }}"
    body: >
      {
        "name" : "{{ SSH_keys.comment }}",
        "public_key" : "{{ public_key }}"
      }
    status_code: 201
    body_format: json
  register: do_ssh_key
  when: ssh_key_exist is not defined

- name: "Getting your SSH key ID on Digital Ocean..."
  digital_ocean:
    state: present
    command: ssh
    name: "{{ SSH_keys.comment }}"
    api_token: "{{ do_access_token }}"
  register: do_ssh_key

- name: "Creating a droplet..."
  digital_ocean:
    state: present
    command: droplet
    name: "{{ do_server_name }}"
    region_id: "{{ do_region }}"
    size_id: "512mb"
    image_id: "ubuntu-16-04-x64"
    ssh_key_ids: "{{ do_ssh_key.ssh_key.id }}"
    unique_name: yes
    api_token: "{{ do_access_token }}"
  register: do

- name: Add the droplet to an inventory group
  add_host:
    name: "{{ do.droplet.ip_address }}"
    groups: vpn-host
    ansible_ssh_user: root
    ansible_python_interpreter: "/usr/bin/python2.7"
    ansible_ssh_private_key_file: "{{ SSH_keys.private }}"
    do_access_token: "{{ do_access_token }}"
    do_droplet_id: "{{ do.droplet.id }}"
    easyrsa_p12_export_password: "{{ easyrsa_p12_export_password }}"
    cloud_provider: digitalocean
    ipv6_support: yes

- name: Wait for SSH to become available
  local_action: "wait_for port=22 host={{ do.droplet.ip_address }} timeout=320"
